#this is a comment 
#all numbers are in hexadecimal
#the reset signal is raised before this code is executed and the flags and the registers are set to zeros.
.ORG 0 #this is the interrupt code
AND R3,R4
ADD R1,R4
OUT R4
.ORG 20 #this is the instructions code
IN R1                   #add 00000004 in R1
IN R2                   #add 00000020 in R2
IN R3                   #FFFFFFFF
IN R4                   #FFFFF320
MOV R3,R5               #R5= FFFFFFFF , flags no change
ADD R1,R2                #R2= 24
NOT R3
JN R2
OUT R1
OUT R2
OUT R3
OUT R4
IN R5                   #IN = AABD
OUT R5
INC R2
JMP R2
ADD R0, R0
ADD R0, R0





---------------------------------------------


#this is a comment 
#all numbers are in hexadecimal
#the reset signal is raised before this code is executed and the flags and the registers are set to zeros.
.ORG 0 #this is the interrupt code
AND R3,R4
ADD R1,R4
OUT R4
.ORG 20 #this is the instructions code
IN R1                   #add 0000000D in R1
IN R2                   #add 00000020 in R2
IN R3                   #FFFFFFFF
IN R4                   #FFFFF320
MOV R3,R5               #R5= FFFFFFFF , flags no change
ADD R1,R2                #R2= 24
NOT R3
PUSH R2
ADD R0,R0
POP R3
CALL R2
ADD R0,R0
ADD R0,R0
NOT R3
ADD R1,R0
NOT R3
OUT R1
RET v

-----------------------------------------

#this is a comment 
#all numbers are in hexadecimal
#the reset signal is raised before this code is executed and the flags and the registers are set to zeros.
.ORG 0 #this is the interrupt code
AND R3,R4
ADD R1,R4
OUT R4
.ORG 20 #this is the instructions code
IN R1                   #add 00000005 in R1
IN R2                   #add 00000005 in R2
IN R3                   #FFFFFFFF
IN R4                   #FFFFF320
MOV R3,R5               #R5= FFFFFFFF , flags no change
SUB R1,R2                #R2= 0
NOT R3
LDM R3,5
ADD R6,R0
ADD R0,R0

-------------------------------------------